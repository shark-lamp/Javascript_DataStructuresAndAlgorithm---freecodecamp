function convertToRoman(num) {

//SOLUTION - 1;

  if(num < 1){ return "";}
  if(num >= 1000){return "M" + convertToRoman(num - 1000);}
  if(num >= 900){return "CM" + convertToRoman(num - 900);}
  if(num >= 500){return "D" + convertToRoman(num - 500);}
  if(num >= 400){return "CD" + convertToRoman(num - 400);}
  if(num >= 100){return "C" + convertToRoman(num - 100);}
  if(num >= 90){return "XC" + convertToRoman(num - 90);}
  if(num >= 50){return "L" + convertToRoman(num - 50);}
  if(num >= 40){return "XL" + convertToRoman(num - 40);}
  if(num >= 10){return "X" + convertToRoman(num - 10);}
  if(num >= 9){return "IX" + convertToRoman(num - 9);}
  if(num >= 5){return "V" + convertToRoman(num - 5);}
  if(num >= 4){return "IV" + convertToRoman(num - 4);}
  if(num >= 1){return "I" + convertToRoman(num - 1);}

 return num;
}


/*

//SOLUTION - 2;


//creating an object 
// its a bad strategy - to repeat same lines of code again and again - but how to improve?
//the object strategy might not work - oh! wait it will!!
  let rom = { 1000:'M', 900:'CM', 500:'D', 400:'CD', 100:'C', 90:'XC', 50:'L', 40:'XL', 10:'X', 9:'IX', 5:'V', 4:'IV', 1:'I'};
  let val = [];

   // console.log(rom.length);
   console.log(rom[1]);
   if(num < 1){return "";}
   else{
     
     for(let i = 0; i < Object.keys(rom).length; i++){
       if(Object.keys(rom[i]) >= num){
         return val = Object.values(rom[i] + convertToRoman(num - Object.keys(rom[i])));
         }
      }
     
   }
  let x = val.join();
  console.log(x);
  return x;
    
}
*/



convertToRoman(36);